/*****************************************
* Project: BCM I4						 *
* Developer: Daniel Popa				 *
* Module: Diagnostic Event Manager	     *
******************************************/
/*****************************************
*		INCLUDE PATHS					 *
******************************************/
#include "Dem.h"
/*****************************************
*		END OF INCLUDE PATHS		     *
******************************************/
/*****************************************
*		DEFINES					 		 *
******************************************/
#define DEM_INIT_STATE			0x00
#define DEM_DEINIT_STATE		0x02
#define DEM_PROCESSFAULT_STATE 	0x01
/*****************************************
* 		END OF DEFINES					 *
******************************************/
/*****************************************
*		VARIABLES					 	 *
******************************************/
/* Module state variable. */
uint8 Dem_BswState = STD_LOW;
/* Dtc array. */
uint8 Dem_DtcArray[68] = {STD_LOW};
/*****************************************
*		END OF VARIABLES				 *
******************************************/
/*****************************************
*		FUNCTIONS				 		 *
******************************************/
/* Module initialization. */
StdReturnType Dem_Init();
/* Module de-initialization. */
StdReturnType Dem_DeInit();
/* Module main function. */
VOID Dem_MainFunction();
/* Receive fault from application. */
VOID Dem_ReceiveFault(uint8 faultValue);
/* Process fault from application. */
VOID Dem_ProcessFault();
/* Set the dtc according to the fault. */
VOID Dem_SetDtc(uint8 faultProcessed);
/*****************************************
*		END OF FUNCTIONS				 *
******************************************/
/***********************************************************************************
* Function: Dem_Init													           *
* Description: Initialize the module.			       							   *
************************************************************************************/
StdReturnType Dem_Init()
{
	for(uint8 idx = 0; idx < 68; idx++)
	{
		Dem_DtcArray[idx] = STD_LOW;
	}
	Dem_BswState =
	return E_OK;
}
/***********************************************************************************
* END OF Dem_Init											  			           *													       																	   *
************************************************************************************/
/***********************************************************************************
* Function: Dem_DeInit													           *
* Description: De-initialize the module. 		   							       *
************************************************************************************/
StdReturnType Dem_DeInit()
{
	return E_OK;
}
/***********************************************************************************
* END OF Dem_DeInit											  			           *													       																	   *
************************************************************************************/
/***********************************************************************************
* Function: Dem_MainFunction													   *
* Description: Module main function.									 		   *
************************************************************************************/
VOID Dem_MainFunction()
{

}
/***********************************************************************************
* END OF Dem_MainFunction											  			   *													       																	   *
************************************************************************************/
/***********************************************************************************
* Function: Dem_ReceiveFault													   *
* Description: Receives fault from application.							 		   *
************************************************************************************/
VOID Dem_ReceiveFault(uint8 faultValue)
{

}
/***********************************************************************************
* END OF Dem_ReceiveFault											  			   *													       																	   *
************************************************************************************/
/***********************************************************************************
* Function: Dem_ProcessFault													   *
* Description: Process the fault received from the application.			 		   *
************************************************************************************/
VOID Dem_ProcessFault()
{

}
/***********************************************************************************
* END OF Dem_ProcessFault											               *													       																	   *
************************************************************************************/
/***********************************************************************************
* Function: Dem_SetDtc													   		   *
* Description: Sets the DTC according to the information received.		 		   *
************************************************************************************/
VOID Dem_SetDtc(uint8 faultProcessed)
{

}
/***********************************************************************************
* END OF Dem_SetDtc											  			           *													       																	   *
************************************************************************************/
