#include "Std_Types.h"

#define EEPROM_PAGE_SIZE 									64

#define SYSTEM_MANAGER_RESET_INFORMATION_BLOCK_ID 			0
#define SYSTEM_MANAGER_SYSTEM_DTC_EVENT_BLOCK_ID			1

#define SYSTEM_MANGER_RESET_INFORMATION_BLOCK_LENGTH		64
#define	SYSTEM_MANAGER_SYSTEM_DTC_EVENT_BLOCK_LENGTH		192

#define SYTEM_MANAGER_POSITION_POWER_ON_RESET  				0
#define SYTEM_MANAGER_POSITION_BROWN_OUT_RESET 				1
#define SYTEM_MANAGER_POSITION_SOFTWARE_RESET 				2
#define SYTEM_MANAGER_POSITION_WATCHDOG_RESET				3
#define SYTEM_MANAGER_POSITION_LOW_POWER_RESET 				4
#define SYTEM_MANAGER_POSITION_BUTTON_RESET					5
#define SYTEM_MANAGER_POSITION_HARDWARE_RESET				6
#define SYTEM_MANAGER_POSITION_FLASH_FAULT_RESET 			7
#define SYTEM_MANAGER_POSITION_NMI_RESET					8
#define SYTEM_MANAGER_POSITION_MEMORY_FAULT_RESET  			9
#define SYTEM_MANAGER_POSITION_USAGE_FAULT_RESET			10
#define SYTEM_MANAGER_POSITION_BUS_FAULT_RESET				11
#define SYTEM_MANAGER_POSITION_STACK_OVERFLOW_RESET			12
#define	SYTEM_MANAGER_POSITION_MALLOC_FAILED_RESET			13
#define SYTEM_MANAGER_POSITION_PVD_RESET					14
#define SYTEM_MANAGER_START_POSITION_I2C_FAULT_ERROR		15
#define SYTEM_MANAGER_START_POSITION_SPI_FAULT_ERROR		23
#define SYTEM_MANAGER_START_POSITION_ADC_FAULT_ERROR		30
#define SYTEM_MANAGER_START_POSITION_UART_FAULT_ERROR
#define SYTEM_MANAGER_POSITION_WATCHDOG_FAULT_ERROR	33
#define SYTEM_MANAGER_START_POSITION_TIMER_FAULT_ERROR
#define SYTEM_MANAGER_STOP_POSITION_I2C_FAULT_ERROR			22
#define SYTEM_MANAGER_STOP_POSITION_SPI_FAULT_ERROR			29
#define SYTEM_MANAGER_STOP_POSITION_ADC_FAULT_ERROR			32
#define SYTEM_MANAGER_STOP_POSITION_UART_FAULT_ERROR		33
#define SYTEM_MANAGER_STOP_POSITION_TIMER_FAULT_ERROR

EXTERN void NvM_Eeprom_WriteBlock(uint32 BlockId, uint32 BlockLength, const void *NvM_SrcPtr);
EXTERN void NvM_Eeprom_ReadBlock(uint32 BlockId, uint32 BlockLength, void *NvM_DstPtr);
EXTERN void NvM_Eeprom_EraseBlock(uint32 BlockId, uint32 BlockLength);
EXTERN void NvM_MainFunction();
EXTERN StdReturnType NvM_WriteAll();
EXTERN StdReturnType NvM_ReadAll();
EXTERN StdReturnType NvM_GetErrorStatus();

