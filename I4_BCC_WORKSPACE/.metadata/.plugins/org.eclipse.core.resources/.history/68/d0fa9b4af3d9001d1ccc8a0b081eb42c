/*****************************************
* Project: BCM I4						 *
* Developer: Daniel Popa				 *
* Module: Diagnostic Event Manager	     *
******************************************/
#ifndef Dem_H
#define Dem_H
/*****************************************
*		INCLUDE PATHS					 *
******************************************/
#include "Std_Types.h"
/*****************************************
*		END OF INCLUDE PATHS		     *
******************************************/
/*****************************************
*		DEFINES					 		 *
******************************************/
/* Define value for reset / fault */
#define DTC_POWER_ON_RESET  					0
/* Define value for reset / fault */
#define DTC_BROWN_OUT_RESET 					1
/* Define value for reset / fault */
#define DTC_SOFTWARE_RESET 						2
/* Define value for reset / fault */
#define DTC_WATCHDOG_RESET						3
/* Define value for reset / fault */
#define DTC_LOW_POWER_RESET 					4
/* Define value for reset / fault */
#define DTC_BUTTON_RESET						5
/* Define value for reset / fault */
#define DTC_HARDWARE_RESET						6
/* Define value for reset / fault */
#define DTC_FLASH_FAULT_RESET 					7
/* Define value for reset / fault */
#define DTC_NMI_RESET							8
/* Define value for reset / fault */
#define DTC_MEMORY_FAULT_RESET  				9
/* Define value for reset / fault */
#define DTC_USAGE_FAULT_RESET					10
/* Define value for reset / fault */
#define DTC_BUS_FAULT_RESET						11
/* Define value for reset / fault */
#define DTC_STACK_OVERFLOW_RESET				12
/* Define value for reset / fault */
#define	DTC_MALLOC_FAILED_RESET					13
/* Define value for reset / fault */
#define DTC_ADC_ERROR_INTERNAL					14
/* Define value for reset / fault */
#define DTC_ADC_ERROR_OVR 						15
/* Define value for reset / fault */
#define DTC_ADC_ERROR_DMA 						16
/* Define value for reset / fault */
#define DTC_UART_ERROR_PE 						24
/* Define value for reset / fault */
#define DTC_UART_ERROR_NE 						25
/* Define value for reset / fault */
#define DTC_UART_ERROR_FE 						26
/* Define value for reset / fault */
#define DTC_UART_ERROR_ORE 						27
/* Define value for reset / fault */
#define DTC_UART_ERROR_DMA 						28
/* Define value for reset / fault */
#define DTC_TIMER2_ERROR 						29
/* Define value for reset / fault */
#define DTC_TIMER3_ERROR 						30
/* Define value for reset / fault */
#define DTC_TIMER4_ERROR 						31
/* Define value for reset / fault */
#define DTC_TIMER5_ERROR 						32
/* Define value for reset / fault */
#define SPI_ERROR_MODF							33
/* Define value for reset / fault */
#define SPI_ERROR_FRE							34
/* Define value for reset / fault */
#define SPI_ERROR_CRC							35
/* Define value for reset / fault */
#define SPI_ERROR_OVR							36
/* Define value for reset / fault */
#define SPI_ERROR_DMA							37
/* Define value for reset / fault */
#define SPI_ERROR_FLAG							38
/* Define value for reset / fault */
#define SPI_ERROR_ABORT							39
/* DTC ID define. */
#define DTC_LBUV 								40
/* DTC ID define. */
#define DTC_HBUV 								41
/* DTC ID define. */
#define DTC_DRLUV 								42
/* DTC ID define. */
#define DTC_FFLUV 								43
/* DTC ID define. */
#define DTC_RFLUV 								44
/* DTC ID define. */
#define DTC_RPLUV 								45
/* DTC ID define. */
#define DTC_RTSUV 								46
/* DTC ID define. */
#define DTC_LTSUV 								47
/* DTC ID define. */
#define DTC_RLUV 								48
/* DTC ID define. */
#define DTC_ILUV 								49
/* DTC ID define. */
#define DTC_DLUV 								50
/* DTC ID define. */
#define DTC_LPLUV 								51
/* DTC ID define. */
#define DTC_HC05 								52
/* DTC ID define. */
#define DTC_MCP2515 							53
/* DTC ID define. */
#define DTC_VS 									54
/* DTC ID define. */
#define DTC_LS 									55
/* DTC ID define. */
#define DTC_ALUV 								56
/* DTC ID define. */
#define DTC_CLBUV 								57
/* DTC ID define. */
#define DTC_ALBUV 								58
/* DTC ID define. */
#define DTC_LBS 								59
/* DTC ID define. */
#define DTC_HBS 								60
/* DTC ID define. */
#define DTC_DRLS 								61
/* DTC ID define. */
#define DTC_FFLS 								62
/* DTC ID define. */
#define DTC_RFLS 								63
/* DTC ID define. */
#define DTC_RPLS 								64
/* DTC ID define. */
#define DTC_RTSS 								65
/* DTC ID define. */
#define DTC_LTSS 								66
/* DTC ID define. */
#define DTC_RLS 								67
/* DTC ID define. */
#define DTC_ILS 								68
/* DTC ID define. */
#define DTC_DLS 								69
/* DTC ID define. */
#define DTC_LPLS 								70
/* DTC ID define. */
#define DTC_ALS 								71
/* DTC ID define. */
#define DTC_CLBS 								72
/* DTC ID define. */
#define DTC_ALBS 								73
/*****************************************
* 		END OF DEFINES					 *
******************************************/
/*****************************************
*		VARIABLES					 	 *
******************************************/
/* Module state variable. */
EXTERN uint8 Dem_BswState;
/* Dtc array. */
EXTERN uint8 Dem_DtcArray[74];
/* Dtc count array. */
EXTERN uint8 Dem_DtcCount[74];
/*****************************************
*		END OF VARIABLES				 *
******************************************/
/*****************************************
*		FUNCTIONS				 		 *
******************************************/
/* Module initialization. */
EXTERN StdReturnType Dem_Init();
/* Module de-initialization. */
EXTERN StdReturnType Dem_DeInit();
/* Module main function. */
EXTERN VOID Dem_MainFunction();
/* Receive fault from application. */
EXTERN VOID Dem_ReceiveFault(uint8 faultValue);
/* Process fault from application. */
EXTERN VOID Dem_ProcessFault();
/*****************************************
*		END OF FUNCTIONS				 *
******************************************/
#endif /* Dem_H */
