#include "tim.h"
#include "CenLoc.h"
#include "stdio.h"
#include "string.h"
#include "stdlib.h"
#include "ExtLights.h"
#include "IntLights.h"
#include "SecAlm.h"
#include "Std_Types.h"
#include "usart.h"
#include "gpio.h"

uint8 IntLights_CurrentState;
uint8 IntLights_StateFlag;
uint8 Btc_IntLights;

StdReturnType IntLightsInit();
void IntLightsMainFunction();
void IntLightsToggleIntLights(uint8 PinState);
void IntLightsRxBtcState();

void IntLightsRxBtcState()
{

	if(Btc_IntLights == STD_HIGH)
	{

		IntLights_StateFlag = 3;

	}
	else if(Btc_IntLights == STD_LOW)
	{

		IntLights_StateFlag = 4;

	}
	else
	{

		/* do nothing */

	}

	if(IntLights_StateFlag == 1)
	{

		IntLights_CurrentState = STD_HIGH;

	}
	else if(IntLights_StateFlag == 2)
	{

		IntLights_CurrentState = STD_LOW;

	}
	else if(IntLights_StateFlag == 3)
	{

		IntLights_CurrentState = STD_HIGH;

	}
	else if(IntLights_StateFlag == 4)
	{

		IntLights_CurrentState = STD_LOW;

	}
	else
	{

		/* do nothing */

	}

}

void IntLightsMainFunction()
{
	IntLightsRxBtcState();
	IntLightsToggleIntLights(IntLights_CurrentState);

}

StdReturnType IntLightsInit()
{

	IntLights_CurrentState 	= STD_LOW;
	Btc_IntLights 			= STD_LOW;
	IntLights_StateFlag 	= STD_LOW;

	return E_OK;

}

void IntLightsToggleIntLights(uint8 PinState)
{

	HAL_GPIO_WritePin(INTERIOR_LIGHT_PORT, INTERIOR_LIGHT_PIN, PinState);

}
