#include "Std_Types.h"

#define EEPROM_PAGE_SIZE 								64

#define SYSTEM_MANAGER_RESET_INFORMATION_BLOCK_ID 		0
#define SYSTEM_MANAGER_SYSTEM_DTC_EVENT_BLOCK_ID		1

#define SYSTEM_MANGER_RESET_INFORMATION_BLOCK_LENGTH	64
#define	SYSTEM_MANAGER_SYSTEM_DTC_EVENT_BLOCK_LENGTH	192

#define SYTEM_MANAGER_POSITION_POWER_ON_RESET  					0x0010
#define SYTEM_MANAGER_POSITION_BROWN_OUT_RESET 					0x0011
#define SYTEM_MANAGER_POSITION_SOFTWARE_RESET 						0x0012
#define SYTEM_MANAGER_POSITION_WATCHDOG_RESET						0x0013
#define SYTEM_MANAGER_POSITION_LOW_POWER_RESET 					0x0014
#define SYTEM_MANAGER_POSITION_BUTTON_RESET						0x0015
#define SYTEM_MANAGER_POSITION_HARDWARE_RESET						0x0016
#define SYTEM_MANAGER_POSITION_FLASH_FAULT_RESET 					0x0017
#define SYTEM_MANAGER_POSITION_NMI_RESET							0x0018
#define SYTEM_MANAGER_POSITION_MEMORY_FAULT_RESET  				0x0019
#define SYTEM_MANAGER_POSITION_USAGE_FAULT_RESET					0x0020
#define SYTEM_MANAGER_POSITION_BUS_FAULT_RESET						0x0021
#define SYTEM_MANAGER_POSITION_STACK_OVERFLOW_RESET				0x0022
#define	SYTEM_MANAGER_POSITION_MALLOC_FAILED_RESET					0x0023
#define SYTEM_MANAGER_POSITION_PVD_RESET							0x0024
#define SYTEM_MANAGER_POSITION_I2C_FAULT_ERROR						0x0030
#define SYTEM_MANAGER_POSITION_SPI_FAULT_ERROR						0x0031
#define SYTEM_MANAGER_POSITION_ADC_FAULT_ERROR						0x0032
#define SYTEM_MANAGER_POSITION_UART_FAULT_ERROR					0x0033
#define SYTEM_MANAGER_POSITION_WATCHDOG_FAULT_ERROR				0x0034
#define SYTEM_MANAGER_POSITION_TIMER_FAULT_ERROR					0x0035

EXTERN void NvM_Eeprom_WriteBlock(uint32 BlockId, uint32 BlockLength, const void *NvM_SrcPtr);
EXTERN void NvM_Eeprom_ReadBlock(uint32 BlockId, uint32 BlockLength, void *NvM_DstPtr);
EXTERN void NvM_Eeprom_EraseBlock(uint32 BlockId, uint32 BlockLength);
EXTERN void NvM_MainFunction();
EXTERN StdReturnType NvM_WriteAll();
EXTERN StdReturnType NvM_ReadAll();
EXTERN StdReturnType NvM_GetErrorStatus();

